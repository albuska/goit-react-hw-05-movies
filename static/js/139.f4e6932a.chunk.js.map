{"version":3,"file":"static/js/139.f4e6932a.chunk.js","mappings":"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","sources":["components/API/api.js","components/ButtonGoBack/ButtonGoBack.styled.js","components/ButtonGoBack/ButtonGoBack.jsx","pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a0d42475ca47464f434a1779823aa27d';\n\nexport const fetchPopularMovies = async controller => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieSearchByKey = async (query, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchDetailsOfMovie = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavLink = styled(NavLink)`\n  margin: 10px 0;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  gap: 5px;\n  font-size: 18px;\n  color: #000000;\n\n  :hover {\n    color: #8A2BE2;\n  }\n`;","import { StyledNavLink } from './ButtonGoBack.styled';\nimport { BiArrowBack } from 'react-icons/bi';\nimport PropTypes from 'prop-types';\n\nconst ButtonGoBack = ({ location }) => {\n  return (\n    <div>\n      <StyledNavLink to={location.state}>\n        <BiArrowBack />\n        <span>Go back</span>\n      </StyledNavLink>\n    </div>\n  );\n};\n\nexport default ButtonGoBack;\n\nButtonGoBack.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ContainerBox = styled.div`\n  display: flex;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3),\n    -23px 0 20px -23px rgba(0, 0, 0, 0.6), 23px 0 20px -23px rgba(0, 0, 0, 0.6),\n    inset 0 0 40px rgba(0, 0, 0, 0.1);\n  padding: 40px;\n`;\nexport const Title = styled.h4`\n  margin-top: 0;\n  font-size: 24px;\n  font-weight: 700;\n  color: #032541;\n`;\n\nexport const Overlay = styled.p`\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ContainerDescription = styled.div`\n  width: 800px;\n  padding: 10px;\n  margin-left: 40px;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding-left: 0;\n  align-items: center;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  text-decoration: none;\n  padding: 10px;\n  text-align: center;\n  width: 100px;\n  display: block;\n  border-radius: 3px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3),\n    -23px 0 20px -23px rgba(0, 0, 0, 0.6), 23px 0 20px -23px rgba(0, 0, 0, 0.6),\n    inset 0 0 40px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  :hover {\n    background-color: #032541;\n    color: #ffffff;\n  }\n`;\n\nexport const GenresParagraph = styled.span`\n  margin-top: 20px;\n  display: block;\n`;\n","import { Outlet } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport Loader from '../components/Loader';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchDetailsOfMovie } from '../components/API/api';\nimport ButtonGoBack from 'components/ButtonGoBack';\nimport defaultImage from '../images/defaultImage.jpg';\nimport {\n  ContainerBox,\n  Title,\n  ContainerDescription,\n  Overlay,\n  Item,\n  List,\n  NavLinkStyled,\n  GenresParagraph,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n\n  const [movieItem, setMovieItem] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId === '') {\n      return;\n    }\n    const controller = new AbortController();\n\n    fetchDetailsOfMovie(movieId, controller)\n      .then(item => {\n        setMovieItem(item);\n      })\n      .catch(error => console.log(error));\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n \n  const userScore = Math.round(movieItem.vote_average);\n  const date = new Date(movieItem.release_date);\n  return (\n    <div>\n      <ButtonGoBack location={location}></ButtonGoBack>\n\n      <ContainerBox>\n        <img\n          src={\n            movieItem.poster_path\n              ? `https://image.tmdb.org/t/p/w500/${movieItem.poster_path}`\n              : defaultImage\n          }\n          alt={movieItem.title}\n          width=\"200\"\n        />\n        <ContainerDescription>\n          <Title>\n            {movieItem.title} <span>({date.getFullYear()})</span>\n          </Title>\n          <Overlay>\n            <b>User score:</b> {userScore}%\n          </Overlay>\n          <Overlay>\n            <b>Overview</b>\n          </Overlay>\n          <Overlay>{movieItem.overview}</Overlay>\n          <Overlay>\n            <b>Genres</b>\n            <GenresParagraph>\n              {movieItem.genres &&\n                movieItem.genres.map(genre => genre.name).join(', ')}\n            </GenresParagraph>\n          </Overlay>\n        </ContainerDescription>\n      </ContainerBox>\n      <h4>Additional information</h4>\n      <List>\n        <Item>\n          <NavLinkStyled to=\"cast\" state={location.state}>\n            Cast\n          </NavLinkStyled>\n        </Item>\n        <Item>\n          <NavLinkStyled to=\"reviews\" state={location.state}>\n            Reviews\n          </NavLinkStyled>\n        </Item>\n      </List>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchPopularMovies","controller","axios","signal","response","data","fetchMovieSearchByKey","query","fetchDetailsOfMovie","id","fetchMovieCredits","fetchMovieReviews","StyledNavLink","styled","NavLink","location","to","state","ContainerBox","Title","Overlay","ContainerDescription","List","Item","NavLinkStyled","GenresParagraph","useLocation","useState","movieItem","setMovieItem","movieId","useParams","useEffect","AbortController","then","item","catch","error","console","log","abort","userScore","Math","round","vote_average","date","Date","release_date","src","poster_path","defaultImage","alt","title","width","getFullYear","overview","genres","map","genre","name","join","Suspense","fallback","Loader"],"sourceRoot":""}