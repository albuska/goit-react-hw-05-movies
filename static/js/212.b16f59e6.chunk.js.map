{"version":3,"file":"static/js/212.b16f59e6.chunk.js","mappings":"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","sources":["components/API/api.js","components/SearchString/SearchString.styled.js","components/SearchString/SearchString.jsx","components/FilteredMoviesList/FilteredMoviesList.styled.js","components/FilteredMoviesList/FilteredMoviesList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a0d42475ca47464f434a1779823aa27d';\n\nexport const fetchPopularMovies = async controller => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieSearchByKey = async (query, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchDetailsOfMovie = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n","import styled from \"styled-components\";\n\nexport const InputBox = styled.div`\n  position: relative;\n  padding: 40px 0;\n`;\n\nexport const Input = styled.input`\n  width: 70%;\n  display: block;\n  margin: 0 auto;\n  border: none;\n  background: #b0c4de;\n  padding: 5px;\n  border-radius: 3px;\n  padding: 15px;\n  outline: none;\n`;\n\nexport const SubmitButton = styled.button`\n  position: absolute;\n  display: block;\n  width: 47px;\n  height: 48px;\n  background: #add8e6;\n  cursor: pointer;\n  border: none;\n  border-bottom-right-radius: 3px;\n  border-top-right-radius: 3px;\n  bottom: 40px;\n  right: 172px;\n\n  :hover {\n    background: #4682b4;\n  }\n\n  svg {\n    width: 100%;\n    height: 100%;\n    display: block;\n  }\n`;","import { FcSearch } from 'react-icons/fc';\nimport { InputBox, Input } from './SearchString.styled';\nimport toast from 'react-hot-toast';\nimport { useState } from 'react';\nimport { SubmitButton } from './SearchString.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchString = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchValue.trim() === '') {\n      toast.error('Search title of movie', {\n        duration: 3000,\n        position: 'top-right',\n      });\n      return;\n    }\n    if (searchValue) onSubmit(searchValue);\n    setSearchValue('');\n  };\n\n  const handleInputChange = event => {\n    setSearchValue(event.currentTarget.value.toLowerCase());\n  };\n\n  return (\n    <InputBox>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          value={searchValue}\n          onChange={handleInputChange}\n          placeholder=\"Enter the title of movie...\"\n        />\n        <SubmitButton type=\"submit\">\n          <FcSearch />\n        </SubmitButton>\n      </form>\n    </InputBox>\n  );\n};\n\nSearchString.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  width: calc() 100% / 6;\n  /* text-align: center; */\n  align-items: center;\n`;","import defaultImage from '../../images/defaultImage.jpg';\n// import PropTypes from 'prop-types';\nimport { StyledLink, List, Item } from './FilteredMoviesList.styled'; \nimport { useLocation } from 'react-router-dom';\n\nconst FilteredMoviesList = ({ moviesList }) => {\n  const location = useLocation(); \n  return (\n    <div>\n      <List>\n        {moviesList.map(result => (\n          <Item key={result.id}>\n            <StyledLink to={`${result.id}`} state={location}>\n              <img\n                src={\n                  result.poster_path === null\n                    ? defaultImage\n                    : `https://image.tmdb.org/t/p/w500/${result.poster_path}`\n                }\n                alt={result.title}\n                width=\"200\"\n              />\n              <p>{result.title}</p>\n            </StyledLink>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default FilteredMoviesList;\n\n// FilteredMoviesList.propTypes = {\n//   moviesList: PropTypes.object({\n//     item: PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       poster_path: PropTypes.string.isRequired,\n//       title: PropTypes.string.isRequired,\n//     }).isRequired,\n//   }).isRequired,\n// };\n\n","import { SearchString } from '../components/SearchString/SearchString';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearchByKey } from '../components/API/api';\nimport FilteredMoviesList from '../components/FilteredMoviesList';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\n\nconst Movies = () => {\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const [visibleMovies, setVisibleMovies] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    if (movieName === '') {\n      return;\n    }\n    fetchMovieSearchByKey(movieName.toLowerCase(), controller).then(({ results }) => {\n      setVisibleMovies(results);\n        if (results.length === 0) {\n           toast.error(`Oops...No such title found ${movieName}`, {\n             duration: 3000,\n             position: 'top-right',\n           });\n        }\n    })\n    return () => {\n      controller.abort(); \n    }\n  }, [movieName]);\n\n  const handleSearchFormSubmit = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <div>\n      <SearchString onSubmit={handleSearchFormSubmit} />\n      <FilteredMoviesList moviesList={visibleMovies} />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchPopularMovies","controller","axios","signal","response","data","fetchMovieSearchByKey","query","fetchDetailsOfMovie","id","fetchMovieCredits","fetchMovieReviews","InputBox","styled","Input","SubmitButton","SearchString","onSubmit","useState","searchValue","setSearchValue","event","preventDefault","trim","toast","duration","position","type","value","onChange","currentTarget","toLowerCase","placeholder","StyledLink","NavLink","List","Item","moviesList","location","useLocation","map","result","to","state","src","poster_path","defaultImage","alt","title","width","useSearchParams","searchParams","setSearchParams","movieName","get","visibleMovies","setVisibleMovies","useEffect","AbortController","then","results","length","abort"],"sourceRoot":""}