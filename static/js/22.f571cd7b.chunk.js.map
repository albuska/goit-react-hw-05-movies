{"version":3,"file":"static/js/22.f571cd7b.chunk.js","mappings":"kTAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAkB,mCAAG,WAAMC,GAAN,uFACTC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,oCACkBC,GACvC,CACEI,OAAQF,EAAWE,SAJS,cAC1BC,EAD0B,yBAOzBA,EAASC,MAPgB,2CAAH,sDAUlBC,EAAqB,mCAAG,WAAOC,EAAON,GAAd,uFACZC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,gCACcC,EADd,kBAC+BQ,GACpD,CACEJ,OAAQF,EAAWE,SAJY,cAC7BC,EAD6B,yBAO5BA,EAASC,MAPmB,2CAAH,wDAUrBG,EAAmB,mCAAG,WAAOC,EAAIR,GAAX,uFACVC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDW,EADC,oBACaV,GAClC,CACEI,OAAQF,EAAWE,SAJU,cAC3BC,EAD2B,yBAO1BA,EAASC,MAPiB,2CAAH,wDAUnBK,EAAiB,mCAAG,WAAOD,EAAIR,GAAX,uFACRC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDW,EADC,4BACqBV,GAC1C,CACEI,OAAQF,EAAWE,SAJQ,cACzBC,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,wDAUjBM,EAAiB,mCAAG,WAAOF,EAAIR,GAAX,uFACRC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDW,EADC,4BACqBV,GAC1C,CACEI,OAAQF,EAAWE,SAJQ,cACzBC,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,uD,+IC1CjBO,GAAgBC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,2M,mBCY1B,EAZqB,SAAC,GAAgB,IAAfE,EAAc,EAAdA,SAErB,OADFC,QAAQC,IAAIF,IAER,0BACE,UAACH,EAAD,CAAeM,GAAIH,EAASI,MAA5B,WACE,SAAC,MAAD,KACA,0CAIP,E,UC2DD,EA/DqB,WACnB,IAAMJ,GAAWK,EAAAA,EAAAA,MAEjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAgBC,EAAAA,EAAAA,SAAO,GAoB7B,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAIF,EAAcG,QAAlB,CAIA,IAAM5B,EAAa,IAAI6B,gBAQvB,OANAtB,EAAAA,EAAAA,KAAqBgB,EAASvB,GAC3B8B,MAAK,SAAAC,GACJT,EAAaS,EACd,IACAC,OAAM,SAAAC,GAAK,OAAIlB,QAAQC,IAAIiB,EAAhB,IAEP,WACLjC,EAAWkC,OACZ,CAXA,CAFCT,EAAcG,SAAU,CAc3B,GAAE,CAACL,KAGF,4BACE,SAAC,EAAD,CAAcT,SAAUA,KAEtB,gBACEqB,IAC4B,OAA1Bd,EAAUe,YACNC,EADJ,0CAEuChB,EAAUe,aAEnDE,IAAKjB,EAAUkB,MACfC,MAAM,SAER,0BACGnB,EAAUkB,MADb,KACoB,gCAAQlB,EAAUoB,aAAlB,WAEpB,yCACA,qCACA,uBAAIpB,EAAUqB,YACd,mCAEF,2BACE,yBACE,SAAC,KAAD,CAAMzB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAA0B,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/API/api.js","components/ButtonGoBack/ButtonGoBack.styled.js","components/ButtonGoBack/ButtonGoBack.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a0d42475ca47464f434a1779823aa27d';\n\nexport const fetchPopularMovies = async controller => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieSearchByKey = async (query, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchDetailsOfMovie = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavLink = styled(NavLink)`\n  margin: 10px 0;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  gap: 5px;\n  font-size: 18px;\n  color: #000000;\n\n  :hover {\n    color: #8A2BE2;\n  }\n`;","import { StyledNavLink } from './ButtonGoBack.styled';\nimport { BiArrowBack } from 'react-icons/bi';\n\nconst ButtonGoBack = ({location}) => {\nconsole.log(location)\n  return (\n    <div>\n      <StyledNavLink to={location.state}>\n        <BiArrowBack />\n        <span>Go back</span>\n      </StyledNavLink>\n    </div>\n  );\n};\n\nexport default ButtonGoBack;\n","import { Link, Outlet } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport Loader from '../components/Loader';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchDetailsOfMovie } from '../components/API/api';\nimport ButtonGoBack from 'components/ButtonGoBack';\nimport { useRef } from 'react';\nimport defaultImage from '../images/defaultImage.jpg';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n\n  const [movieItem, setMovieItem] = useState([]);\n  // const [listGenres, setListGenres] = useState([]);\n  const { movieId } = useParams();\n\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    const controller = new AbortController();\n\n    fetchDetailsOfMovie(+movieId, controller)\n      .then(item => {\n        setMovieItem(item);\n      })\n      .catch(error => console.log(error));\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <div>\n      <ButtonGoBack location={location}></ButtonGoBack>\n\n        <img\n          src={\n            movieItem.poster_path === null\n              ? defaultImage\n              : `https://image.tmdb.org/t/p/w500/${movieItem.poster_path}`\n          }\n          alt={movieItem.title}\n          width=\"200\"\n        />\n        <h4>\n          {movieItem.title} <span>({movieItem.release_date})</span>\n        </h4>\n        <p>User score: </p>\n        <p>Overview</p>\n        <p>{movieItem.overview}</p>\n        <p>Genres</p>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchPopularMovies","controller","axios","signal","response","data","fetchMovieSearchByKey","query","fetchDetailsOfMovie","id","fetchMovieCredits","fetchMovieReviews","StyledNavLink","styled","NavLink","location","console","log","to","state","useLocation","useState","movieItem","setMovieItem","movieId","useParams","isFirstRender","useRef","useEffect","current","AbortController","then","item","catch","error","abort","src","poster_path","defaultImage","alt","title","width","release_date","overview","Suspense","fallback","Loader"],"sourceRoot":""}