{"version":3,"file":"static/js/516.417044cc.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAkB,mCAAG,WAAMC,GAAN,uFACTC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,oCACkBC,GACvC,CACEI,OAAQF,EAAWE,SAJS,cAC1BC,EAD0B,yBAOzBA,EAASC,MAPgB,2CAAH,sDAUlBC,EAAqB,mCAAG,WAAOC,EAAON,GAAd,uFACZC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,gCACcC,EADd,kBAC+BQ,GACpD,CACEJ,OAAQF,EAAWE,SAJY,cAC7BC,EAD6B,yBAO5BA,EAASC,MAPmB,2CAAH,wDAUrBG,EAAmB,mCAAG,WAAOC,EAAIR,GAAX,uFACVC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDW,EADC,oBACaV,GAClC,CACEI,OAAQF,EAAWE,SAJU,cAC3BC,EAD2B,yBAO1BA,EAASC,MAPiB,2CAAH,wDAUnBK,EAAiB,mCAAG,WAAOD,EAAIR,GAAX,uFACRC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDW,EADC,4BACqBV,GAC1C,CACEI,OAAQF,EAAWE,SAJQ,cACzBC,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,wDAUjBM,EAAiB,mCAAG,WAAOF,EAAIR,GAAX,uFACRC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDW,EADC,4BACqBV,GAC1C,CACEI,OAAQF,EAAWE,SAJQ,cACzBC,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,uD,mJC3CjBO,EAAOC,EAAAA,GAAAA,GAAH,qJAQJC,EAAOD,EAAAA,GAAAA,GAAH,oRAUJE,EAAQF,EAAAA,GAAAA,IAAH,0D,SCwBlB,EAtCa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMpB,EAAa,IAAIqB,gBAKvB,OAJAZ,EAAAA,EAAAA,KAAmBM,EAASf,GACzBsB,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAUI,EAAxB,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAEP,WACLzB,EAAW4B,OACZ,CACF,GAAE,CAACb,KAGF,0BACE,SAACJ,EAAD,UACGO,EAAOW,KAAI,gBAAGrB,EAAH,EAAGA,GAAH,IAAOsB,aAAAA,OAAP,MAAsBC,EAAtB,EAAoCC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACV,UAACpB,EAAD,YACE,SAACC,EAAD,CACEoB,IACmB,OAAjBJ,EACIC,EADJ,0CAEuCD,GAEzCK,IAAKH,EACLI,MAAM,SAER,wBAAKJ,KACL,uCAAeC,OAXNzB,EADD,OAkBnB,C","sources":["components/API/api.js","components/Cast/cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a0d42475ca47464f434a1779823aa27d';\n\nexport const fetchPopularMovies = async controller => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieSearchByKey = async (query, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchDetailsOfMovie = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async (id, controller) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  list-style: none;\n`;\nexport const Item = styled.li`\n  width: calc(100% / 6);\n  height: 270px;\n  text-align: center;\n  padding: 10px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3),\n    -23px 0 20px -23px rgba(0, 0, 0, 0.6), 23px 0 20px -23px rgba(0, 0, 0, 0.6),\n    inset 0 0 40px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Image = styled.img`\n  width: 100px;\n  height: auto;\n`;\n","import { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../API/api';\nimport { useEffect, useState } from 'react';\nimport defaultImage from '../../images/defaultImage.jpg';\nimport { List, Item, Image } from './cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    fetchMovieCredits(+movieId, controller)\n      .then(({ cast }) => setActors(cast))\n      .catch(error => console.log(error));\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <div>\n      <List>\n        {actors.map(({ id, profile_path = defaultImage, name, character }) => (\n          <Item key={id}>\n            <Image\n              src={\n                profile_path === null\n                  ? defaultImage\n                  : `https://image.tmdb.org/t/p/w500/${profile_path}`\n              }\n              alt={name}\n              width=\"100\"\n            />\n            <h5>{name}</h5>\n            <p>Character: {character}</p>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","fetchPopularMovies","controller","axios","signal","response","data","fetchMovieSearchByKey","query","fetchDetailsOfMovie","id","fetchMovieCredits","fetchMovieReviews","List","styled","Item","Image","movieId","useParams","useState","actors","setActors","useEffect","AbortController","then","cast","catch","error","console","log","abort","map","profile_path","defaultImage","name","character","src","alt","width"],"sourceRoot":""}